stdin = c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
mean(stdin)
median(stdin)
sort(stdin)[1]
if length(stdin) == length(unique(stdin)) {
sort(stdin)[1]
}
if length(stdin) == length(unique(stdin)) {
if(length(stdin) == length(unique(stdin))) {
sort(stdin)[1]
}
a = stdin
stdin = c(1,2,4,3,5,2,1,2,3,2,9)
if(length(stdin) == length(unique(stdin))) {
sort(stdin)[1]
}
if(length(stdin) > length(unique(stdin))) {
stdin[which.max(tabulate(match(stdin, unique(stdin))))]
}
stdout = mean(stdin)
stdout[2] = median(stdin)
if(length(stdin) == length(unique(stdin))) {
stdout[3] = sort(stdin)[1]
}
if(length(stdin) > length(unique(stdin))) {
stdout[3] = stdin[which.max(tabulate(match(stdin, unique(stdin))))]
}
stdout[4] = sd(stdin)
t.test(stdin)
t = t.test(stdin)
t[[3]]
t[[4]]
t[[4]][1]
t[[4]][2]
t[[4]][1:2]
stdout[5:6] = t[[4]][1:2]
stdout
t(stdout)
print(stdout)
print(stdout[1:5])
for i in 1:4 {
print(stdout[i]
}
for i in 1:4 {
print(stdout[i] )
}
for (i in 1:4) {
print(stdout[i] )
}
for (i in 1:4) {
printf(stdout[i] )
}
for (i in 1:4) {
stdout2 = (stdout[i] )
}
for (i in 1:4) {
stdout2[i,] = (stdout[i] )
}
rm(stdout2)
for (i in 1:4) {
stdout2[i,] = (stdout[i] )
}
stdout2 = NULL
for (i in 1:4) {
stdout2[i,] = (stdout[i] )
}
stdout2 = as.list(stdout[1:4])
stdout2[[5]] = stdout[5:6]
stdout2
for (i in 1:5) {
print(stdout2[[i]])
}
for (i in 1:5) {
print(stdout2[[i]], useSource = TRUE)
}
for (i in 1:5) {
print(stdout2[[i]], useSource = FALSE)
}
require(stats)
ts(1:20)  #-- print is the "Default function" --> print.ts(.) is called
for(i in 1:3) print(1:i)
set.seed(521)
t1 <- round(abs(rt(200, df = 1.8)))
t2 <- round(abs(rt(200, df = 1.4)))
table(t1, t2) # simple
print(table(t1, t2), zero.print = ".") # nicer to read
T <- table(t2,t1)
T <- T * (1+round(rlnorm(length(T)))/4)
print(T, zero.print = ".") # quite nicer,
print.table(T[,2:8] * 1e9, digits=3, zero.print = ".")
Matrix::Matrix(T)
stdout2
print(stdout)
print(stdout, row.names = FALSE)
for (i in 1:5) {
print(stdout2[[i]], row.names = FALSE)
}
sprintf(stdout)
prettyNum(stdout)
table(stdout)
ts(stdout)
prettyNum(stdout, noquote(stdout))
noquote(stdout)
noquote(stdout, row.names = FALSE)
print(stdout, row.names = FALSE)
print(stdout2, row.names = FALSE)
print(stdout2, names = FALSE)
format(1:10)
format(1:10, trim = TRUE)
toString(stdout)
sprintf(toString(stdout[1]), "/n", toString(stdout[2]))
"Number of words in audio annotations \n per report"
sprintf("Number of words in audio annotations \n per report")
sprintf("Number of words in audio annotations" \n "per report")
sprintf(c("Number of words in audio annotations", \n, "per report"))
sprintf(c("Number of words in audio annotations", "\n", "per report"))
table(sprintf(c("Number of words in audio annotations", "\n", "per report")))
unname(stdout)
rm(list=ls())
